#!/usr/bin/env ruby

require 'time'
require 'compass'
Compass.add_project_configuration('config/compass.development.rb')

default_sass_options = Compass.sass_engine_options
default_haml_options = { :format => :html5 }

preprocess do
  # Don't publish items if so indicated.
  items.delete_if { |item| item[:publish] == false }

  # Convert all articles to canonical paths.
  articles.each(&:canonicalize!)

  # Ensure uniqueness of identifiers and article_ids.
  [:entity_id, :stub].each do |unique_field|
    candidates = articles.map(&unique_field)
    unique_articles = candidates.compact.uniq
    delta = candidates.size - unique_articles.size
    raise ArgumentError.new("some articles have non-unique or nil values for #{unique_field.to_sym}") unless delta == 0
  end
end

route '/assets/*/' do
  "#{item.identifier.chop}.#{item[:extension].split('.').first}"
end

route '/styles/_*/' do
  # Don't render partials.
  nil
end

route '/styles/*/' do
  "#{item.identifier.chop}.#{item[:extension].split('.').first}"
end

route '/posts/*/' do
  # Route to "/{posts prefix}/{date}/{stub}".
  raise ArgumentError.new("tried to route a post that wasn't an article") unless item.article?

  route_for(:post, item).route
end

route '/posts/*/', :rep => :raw do
  route_for(:post, item).raw_route
end

route '*' do
  item.identifier + config[:default_index]
end

compile '/assets/*/' do
  # Assets don't need to be compiled.
end

compile '/styles/*/' do
  filter :sass,
    default_sass_options.merge(:syntax => item[:extension].to_sym)
end

compile '/posts/*/' do
  compile_for_item(item)
  layout_for(item)
end

compile '/posts/*/', :rep => :raw do
  # Don't do any processing or layout.
end

compile '*' do
  compile_for_item(item)
  layout_for(item)
end

layout '*', :haml

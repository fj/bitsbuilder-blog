#!/usr/bin/env ruby

require 'time'
require 'compass'
Compass.add_project_configuration('config/compass.development.rb')

default_sass_options = Compass.sass_engine_options
default_haml_options = { :format => :html5 }

preprocess do
  # Don't publish items if so indicated.
  items.delete_if { |item| item[:publish] == false }

  # Convert all articles to canonical paths.
  articles.each(&:canonicalize!)

  # Ensure uniqueness of identifiers.
  article_ids = articles.map(&:entity_id)
  unique_article_ids = article_ids.compact.uniq
  delta = article_ids - unique_article_ids
  raise ArgumentError.new("some articles `#{delta.inspect}` have non-unique or nil identifiers") unless delta.empty?
end

route '/styles/_*/' do
  # Don't render partials.
  nil
end

route '/styles/*/' do
  "#{item.identifier.chop}.#{item[:extension].split('.').first}"
end

route '/posts/*/' do
  # Route to "/{posts prefix}/{date}/{stub}".
  raise ArgumentError.new("tried to route a post that wasn't an article") unless item.article?

  prefix = 'posts'

  t = Time.parse(item[:created_at])
  entry_year  = t.strftime("%Y")
  entry_month = t.strftime("%m")
  entry_day   = t.strftime("%d")

  date = [entry_year, entry_month, entry_day]

  name = "#{item.stub}"

  suffix = "index.#{item[:extension].split('.').first}"

  "#{['', prefix, date.flatten, name, suffix].join('/')}"
end

route '*' do
  item.identifier + 'index.html'
end

compile '/styles/*/' do
  filter :sass,
    default_sass_options.merge(:syntax => item[:extension].to_sym)
end

compile '*' do
  log("compiling #{item.identifier}")
  extension = item[:extension].split('.').last
  filter_for_extension!(extension).call

  kind = item.identifier.split('/').reject { |i| i.blank? }.first
  target = case kind
  when 'posts' then 'main'
  when 'pages' then 'home'
  else              'home'
  end

  log("laying out #{target} (#{kind}) => #{item.identifier}")
  layout target
end

layout '*', :haml
